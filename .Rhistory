"Persians",      "42.13%",       "1.5%",
"Poles",      "50.40%",      "1.79%",
"Portuguese",      "46.73%",      "1.41%",
"Saracens",      "52.16%",      "2.41%",
"Sicilians",      "52.09%",      "2.54%",
"Slavs",      "49.61%",      "1.65%",
"Spanish",      "46.02%",       "2.1%",
"Tatars",      "50.95%",      "2.67%",
"Teutons",      "49.36%",      "2.67%",
"Turks",      "48.29%",      "2.16%",
"Vietnamese",      "47.42%",      "1.75%",
"Vikings",      "53.65%",      "4.15%")
)
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), ~as.numeric(gsub("%","",.)))
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), funs(as.numeric(gsub("%","",.))))
## Estos son de aqí https://www.ageofempires.com/stats/ageiide-global
(wins_popularidad <- tibble::tribble(
~Civilization, ~Victory.Rate,  ~Popularity,
"Aztecs",      "53.17%",       "3.9%",
"Bengalis",      "41.75%",       "0.1%",
"Berbers",      "55.15%",      "2.75%",
"Bohemians",      "50.21%",      "1.36%",
"Britons",      "45.66%",      "3.42%",
"Bulgarians",      "50.94%",       "2.6%",
"Burgundians",      "51.30%",      "2.12%",
"Burmese",      "48.86%",         "1%",
"Byzantines",      "48.74%",      "2.22%",
"Celts",      "46.65%",      "1.55%",
"Chinese",      "47.06%",      "1.81%",
"Cumans",      "51.11%",      "4.13%",
"Dravidians",      "46.14%",      "0.17%",
"Ethiopians",      "52.58%",      "4.29%",
"Franks",      "54.00%",      "7.24%",
"Goths",      "47.60%",      "2.58%",
"Gurjaras",      "51.40%",       "0.3%",
"Hindustanis",      "50.78%",      "1.77%",
"Huns",      "49.47%",      "3.57%",
"Incas",      "52.32%",      "1.46%",
"Italians",      "46.43%",      "1.48%",
"Japanese",      "43.57%",      "1.43%",
"Khmer",      "47.85%",      "2.12%",
"Koreans",      "49.69%",      "1.33%",
"Lithuanians",      "45.30%",       "2.2%",
"Magyars",      "54.70%",      "8.05%",
"Malay",      "43.34%",      "1.18%",
"Malians",      "50.33%",      "1.34%",
"Mayans",      "48.28%",      "3.24%",
"Mongols",      "44.04%",      "2.48%",
"Persians",      "42.13%",       "1.5%",
"Poles",      "50.40%",      "1.79%",
"Portuguese",      "46.73%",      "1.41%",
"Saracens",      "52.16%",      "2.41%",
"Sicilians",      "52.09%",      "2.54%",
"Slavs",      "49.61%",      "1.65%",
"Spanish",      "46.02%",       "2.1%",
"Tatars",      "50.95%",      "2.67%",
"Teutons",      "49.36%",      "2.67%",
"Turks",      "48.29%",      "2.16%",
"Vietnamese",      "47.42%",      "1.75%",
"Vikings",      "53.65%",      "4.15%")
)
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), ~as.numeric(gsub("%","",.)))
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), funs(as.numeric(gsub("%","",.))))
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), funs(as.numeric(gsub("%","",.))))
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), funs(as.numeric(gsub("%","",.))))
wins_popularidad <- wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), ~as.numeric(gsub("%","",.)))
# la pa´gina de los siguientes datos: https://www.unitstatistics.com/age-of-empires2/
(general_units <- read_html("https://www.unitstatistics.com/age-of-empires2/") %>%
html_element(css = "#tablepress-6") %>%
html_table())
# ¿Cómo selecciono el primer elemento de cada uno, sé que s con for o con un apply ### ### ##### #### ### ### #
names <- names(general_units) <- general_units %>%
janitor::clean_names() %>%
names()
names
general_units %>%
janitor::clean_names()
general_units %>%
janitor::clean_names() %>%
names()
names(general_units) <- general_units %>%
janitor::clean_names() %>%
names() %>%
sub("\\_.*", "", .)  # quitar antes de un delimitar o quitar antes de un caracte # quitar antes de un delimitar o quitar antes de un caracter
general_units
(relacion_uni <- fromJSON("01_datos/units.json") %>%
tibble())
general_units
general_units
(relacion_uni <- fromJSON("01_datos/units.json") %>%
tibble())
(relacion_uni <- relacion_uni %>%
unnest("unit_counters"))
relacion_uni %>%
filter(id ==1115)
relacion_uni %>%
select(id, name, unit_id)
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni
relacion_uni %>%
select(id, name, unit_id) %>%
anti_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni %>%
select(id, name, unit_id) %>%
right_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni %>%
select(id, name, unit_id) %>%
semi_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni %>%
select(id, name, unit_id)
relacion_uni %>%
select(id, name, unit_id)
relacion_uni %>%
select(id, name, unit_id)
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id"))  #que join usar
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id")) %>%
count(unit_id)
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id")) %>%
count(unit_id) %>%
print(n = Inf)
relacion_uni %>%
select(id, name, unit_id) %>%
count(id)
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id")) %>%
count(unit_id) %>%
print(n = Inf)
relacion_uni
relacion_uni %>%
select(id, name, unit_id) %>%
inner_join(relacion_uni, by= c("unit_id" = "id"))
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"))
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"))
relacion_uni
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"))
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
print(100)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
print(n =100)
relacion_uni
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
group_by(id, unit_id) %>%
distinct()
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
distinct()
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
distinct()
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct()
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct() %>%
print(n = Inf)
relacion_uni
relacion_uni %>%
print(n = Inf)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"))
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct() %>%
print(n = Inf)
library(readr)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct() %>%
filter(name.y = NA)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct() %>%
filter(name.y = "NA")
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct() %>%
filter(name.y == NA)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct() %>%
filter(name.y == "NA")
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id")) %>%
select(id:slug) %>%
distinct()
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug) %>%
distinct()
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug) %>%
distinct() %>%
filter(name_unit_debilitie == "NA")
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug) %>%
distinct() %>%
filter(name_unit_debilitie == NA)
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug) %>%
distinct() %>%
filter(name_unit_debilitie == "Militia Line")
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug) %>%
distinct() %>%
janitor::remove_empty()
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug) %>%
distinct() %>%
janitor::remove_empty(name_unit_debilitie  )
relacion_uni %>%
select(id, name, unit_id) %>%
left_join(relacion_uni, by= c("unit_id" = "id"),
suffix = c("_unit", "_unit_debilitie")) %>%
select(id:slug) %>%
distinct() %>%
janitor::remove_empty(name_unit_debilitie)
pacman::p_load(gghighlight,ggrepel,janitor, jsonlite, readr,rvest, scico, tidyverse, tidytext,  unheadr, xml2)
## Estos son de aqí https://www.ageofempires.com/stats/ageiide-global
(wins_popularidad <- tibble::tribble(
~Civilization, ~Victory.Rate,  ~Popularity,
"Aztecs",      "53.17%",       "3.9%",
"Bengalis",      "41.75%",       "0.1%",
"Berbers",      "55.15%",      "2.75%",
"Bohemians",      "50.21%",      "1.36%",
"Britons",      "45.66%",      "3.42%",
"Bulgarians",      "50.94%",       "2.6%",
"Burgundians",      "51.30%",      "2.12%",
"Burmese",      "48.86%",         "1%",
"Byzantines",      "48.74%",      "2.22%",
"Celts",      "46.65%",      "1.55%",
"Chinese",      "47.06%",      "1.81%",
"Cumans",      "51.11%",      "4.13%",
"Dravidians",      "46.14%",      "0.17%",
"Ethiopians",      "52.58%",      "4.29%",
"Franks",      "54.00%",      "7.24%",
"Goths",      "47.60%",      "2.58%",
"Gurjaras",      "51.40%",       "0.3%",
"Hindustanis",      "50.78%",      "1.77%",
"Huns",      "49.47%",      "3.57%",
"Incas",      "52.32%",      "1.46%",
"Italians",      "46.43%",      "1.48%",
"Japanese",      "43.57%",      "1.43%",
"Khmer",      "47.85%",      "2.12%",
"Koreans",      "49.69%",      "1.33%",
"Lithuanians",      "45.30%",       "2.2%",
"Magyars",      "54.70%",      "8.05%",
"Malay",      "43.34%",      "1.18%",
"Malians",      "50.33%",      "1.34%",
"Mayans",      "48.28%",      "3.24%",
"Mongols",      "44.04%",      "2.48%",
"Persians",      "42.13%",       "1.5%",
"Poles",      "50.40%",      "1.79%",
"Portuguese",      "46.73%",      "1.41%",
"Saracens",      "52.16%",      "2.41%",
"Sicilians",      "52.09%",      "2.54%",
"Slavs",      "49.61%",      "1.65%",
"Spanish",      "46.02%",       "2.1%",
"Tatars",      "50.95%",      "2.67%",
"Teutons",      "49.36%",      "2.67%",
"Turks",      "48.29%",      "2.16%",
"Vietnamese",      "47.42%",      "1.75%",
"Vikings",      "53.65%",      "4.15%")
)
## Para qué sirve cada paquete?
?gghighlight
?ggrepel
pacman::p_load(gghighlight,ggrepel,janitor, jsonlite, readr,rvest, scico, tidyverse, tidytext,  unheadr, xml2)
### Age of empires
### Código re-elaborado por Toaki Hoz Canabal de https://luisdva.github.io/rstats/aoe-PCA/
####### ############### ################# #################### #####
#
#
#
#  Para aprender webscraping: https://dcl-wrangle.stanford.edu/index.html
#
#
#
####### ############### ################# #################### #####
# https://github.com/aocpip/aoe2stats
# Para aprender github: https://happygitwithr.com/rstudio-git-github.html
# https://ageofempires.fandom.com/wiki/Unique_unit_(Age_of_Empires_II)
### instalar y Cargar paquetes-----
# install.packages("scico") # paleta de colores
#
# install.packages("ggrepel") #text labels -> https://ggrepel.slowkow.com/
#
# install.packages("gghighlight") # para destacar (subrayar en ggplot)
# # https://yutannihilation.github.io/gghighlight/
# # https://yutani.rbind.io/post/2018-06-16-re-intro-to-gghighlight/
#
# install.packages("unheadr") # El objetivo de unheadres ayudar a disputar datos cuando tienen subtítulos incrustados o cuando los valores se envuelven en varias filas.
# # https://github.com/luisDVA/unheadr
pacman::p_load(gghighlight,ggrepel,janitor, jsonlite, readr,rvest, scico, tidyverse, tidytext,  unheadr, xml2)
## Para qué sirve cada paquete?
?gghighlight # gghiglight() highlights (almost) any geoms according to the given predicates.
?ggrepel # This package contains extra geoms for ggplot2.: geom_text_repel/geom_label_repel
### Repaso de {unheadr}-------
# https://unheadr.liomys.mx/
# https://github.com/luisDVA/unheadr
### Cargamos datos -------
## Estos son de aqí https://www.ageofempires.com/stats/ageiide-global
(wins_popularidad <- tibble::tribble(
~Civilization, ~Victory.Rate,  ~Popularity,
"Aztecs",      "53.17%",       "3.9%",
"Bengalis",      "41.75%",       "0.1%",
"Berbers",      "55.15%",      "2.75%",
"Bohemians",      "50.21%",      "1.36%",
"Britons",      "45.66%",      "3.42%",
"Bulgarians",      "50.94%",       "2.6%",
"Burgundians",      "51.30%",      "2.12%",
"Burmese",      "48.86%",         "1%",
"Byzantines",      "48.74%",      "2.22%",
"Celts",      "46.65%",      "1.55%",
"Chinese",      "47.06%",      "1.81%",
"Cumans",      "51.11%",      "4.13%",
"Dravidians",      "46.14%",      "0.17%",
"Ethiopians",      "52.58%",      "4.29%",
"Franks",      "54.00%",      "7.24%",
"Goths",      "47.60%",      "2.58%",
"Gurjaras",      "51.40%",       "0.3%",
"Hindustanis",      "50.78%",      "1.77%",
"Huns",      "49.47%",      "3.57%",
"Incas",      "52.32%",      "1.46%",
"Italians",      "46.43%",      "1.48%",
"Japanese",      "43.57%",      "1.43%",
"Khmer",      "47.85%",      "2.12%",
"Koreans",      "49.69%",      "1.33%",
"Lithuanians",      "45.30%",       "2.2%",
"Magyars",      "54.70%",      "8.05%",
"Malay",      "43.34%",      "1.18%",
"Malians",      "50.33%",      "1.34%",
"Mayans",      "48.28%",      "3.24%",
"Mongols",      "44.04%",      "2.48%",
"Persians",      "42.13%",       "1.5%",
"Poles",      "50.40%",      "1.79%",
"Portuguese",      "46.73%",      "1.41%",
"Saracens",      "52.16%",      "2.41%",
"Sicilians",      "52.09%",      "2.54%",
"Slavs",      "49.61%",      "1.65%",
"Spanish",      "46.02%",       "2.1%",
"Tatars",      "50.95%",      "2.67%",
"Teutons",      "49.36%",      "2.67%",
"Turks",      "48.29%",      "2.16%",
"Vietnamese",      "47.42%",      "1.75%",
"Vikings",      "53.65%",      "4.15%")
)
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), funs(as.numeric(gsub("%","",.))))
wins_popularidad <- wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), ~as.numeric(gsub("%","",.)))
# la pa´gina de los siguientes datos: https://www.unitstatistics.com/age-of-empires2/
(general_units <- read_html("https://www.unitstatistics.com/age-of-empires2/") %>%
html_element(css = "#tablepress-6") %>%
html_table())
general_units
## Estos son de aqí https://www.ageofempires.com/stats/ageiide-global
(wins_popularidad <- tibble::tribble(
~Civilization, ~Victory.Rate,  ~Popularity,
"Aztecs",      "53.17%",       "3.9%",
"Bengalis",      "41.75%",       "0.1%",
"Berbers",      "55.15%",      "2.75%",
"Bohemians",      "50.21%",      "1.36%",
"Britons",      "45.66%",      "3.42%",
"Bulgarians",      "50.94%",       "2.6%",
"Burgundians",      "51.30%",      "2.12%",
"Burmese",      "48.86%",         "1%",
"Byzantines",      "48.74%",      "2.22%",
"Celts",      "46.65%",      "1.55%",
"Chinese",      "47.06%",      "1.81%",
"Cumans",      "51.11%",      "4.13%",
"Dravidians",      "46.14%",      "0.17%",
"Ethiopians",      "52.58%",      "4.29%",
"Franks",      "54.00%",      "7.24%",
"Goths",      "47.60%",      "2.58%",
"Gurjaras",      "51.40%",       "0.3%",
"Hindustanis",      "50.78%",      "1.77%",
"Huns",      "49.47%",      "3.57%",
"Incas",      "52.32%",      "1.46%",
"Italians",      "46.43%",      "1.48%",
"Japanese",      "43.57%",      "1.43%",
"Khmer",      "47.85%",      "2.12%",
"Koreans",      "49.69%",      "1.33%",
"Lithuanians",      "45.30%",       "2.2%",
"Magyars",      "54.70%",      "8.05%",
"Malay",      "43.34%",      "1.18%",
"Malians",      "50.33%",      "1.34%",
"Mayans",      "48.28%",      "3.24%",
"Mongols",      "44.04%",      "2.48%",
"Persians",      "42.13%",       "1.5%",
"Poles",      "50.40%",      "1.79%",
"Portuguese",      "46.73%",      "1.41%",
"Saracens",      "52.16%",      "2.41%",
"Sicilians",      "52.09%",      "2.54%",
"Slavs",      "49.61%",      "1.65%",
"Spanish",      "46.02%",       "2.1%",
"Tatars",      "50.95%",      "2.67%",
"Teutons",      "49.36%",      "2.67%",
"Turks",      "48.29%",      "2.16%",
"Vietnamese",      "47.42%",      "1.75%",
"Vikings",      "53.65%",      "4.15%")
)
wins_popularidad  %>%
janitor::clean_names() %>%
mutate_at(.vars = c("victory_rate", "popularity"), funs(as.numeric(gsub("%","",.))))
general_units
general_units %>%
janitor::clean_names() %>%
names()
names %>%
str_split(., "_"
names %>%
names %>%
str_split(., "_")
# ¿Cómo selecciono el primer elemento de cada uno, sé que s con for o con un apply ### ### ##### #### ### ### #
names <- names(general_units) <- general_units %>%
janitor::clean_names() %>%
names()
names %>%
str_split(., "_") %>%
unlist()
pacman::p_load(gghighlight,ggrepel,janitor, jsonlite, readr,rvest, scico, tidyverse, tidytext,  unheadr, xml2)
